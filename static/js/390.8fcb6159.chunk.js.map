{"version":3,"file":"static/js/390.8fcb6159.chunk.js","mappings":"+PAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA+BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAvCE,EAAOD,EAAA,GAAEE,EAAWF,EAAA,GAuB3B,OArBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACK,OAAnBf,GAAa,GAAMa,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQC,EAAAA,EAAAA,IAAU,sCAADC,OACM5B,EAAO,sDAC7C,KAAD,EAFKsB,EAAUE,EAAAK,KAGhBC,QAAQC,IAAIT,GACJC,EAASD,EAAWU,KAApBT,KACRO,QAAQC,IAAIR,GACZhB,EAAagB,GAAMC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAEnBM,QAAQC,IAAGP,EAAAS,GAAQ,SACnBlB,GAAY,GAAM,QAEE,OAFFS,EAAAC,KAAA,GAElBd,GAAa,GAAOa,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAd,EAAA,yBAEvB,kBAhBY,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAiBbpB,GACF,GAAG,CAACjB,KAGFsC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACGzB,IAAWwB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,4BACd7B,IAAa4B,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAChBjC,EAAUmC,KAAI,SAAAC,GAAK,OAClBJ,EAAAA,EAAAA,KAAA,MAAAC,SAAoBG,EAAMC,MAAjBD,EAAME,GAAqB,QAK9C,C","sources":["components/cast/Cast.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsErrror] = useState(false);\n\n  useEffect(() => {\n    const getCast = async () => {\n      setIsLoading(true);\n      try {\n        const gettedCast = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=6f0a7e90748cec36ca14cbe73d2c8153`\n        );\n        console.log(gettedCast);\n        const { cast } = gettedCast.data;\n        console.log(cast);\n        setMovieCast(cast);\n      } catch (error) {\n        console.log(error, 'Error');\n        setIsErrror(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {isError && <p>Something went wrong...</p>}\n        {isLoading && <p>Loading ...</p>}\n        {movieCast.map(actor => (\n          <li key={actor.id}>{actor.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsErrror","useEffect","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","gettedCast","cast","_context","prev","next","axios","concat","sent","console","log","data","t0","finish","stop","apply","arguments","_jsx","children","_jsxs","map","actor","name","id"],"sourceRoot":""}