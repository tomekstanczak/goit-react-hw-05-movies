{"version":3,"file":"static/js/440.15e27323.chunk.js","mappings":"mOAMe,SAASA,IACtB,IAAAC,GAAiDC,EAAAA,EAAAA,GAAOC,EAAAA,IAAhDC,EAASH,EAATG,UAAWC,EAAOJ,EAAPI,QAASC,EAAIL,EAAJK,KAAMC,EAAUN,EAAVM,WAOlC,OALAC,EAAAA,EAAAA,YAAU,WACRD,GAEF,GAAG,KAGDE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGL,IAAWM,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4BACdN,IAAaO,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAChBJ,EAAKM,KAAI,SAACC,EAAOC,GAAK,OACrBH,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,UAAAC,OAAYJ,EAAMK,IAAKR,SAAEG,EAAMM,SADhCL,EAEJ,SAKf,C,uECHA,IAvBe,SAACM,EAAeC,GAA+B,IAAvBC,IAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC/CG,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BpB,EAAIsB,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1C3B,EAAS4B,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAA+BP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAvC7B,EAAO8B,EAAA,GAAEC,EAAWD,EAAA,GAErB5B,EAAU,eAAA8B,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OAAnBZ,GAAa,GAAMU,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMzB,EAAcC,GAAQ,KAAD,EAAAoB,EAAAE,EAAAG,KAApCxC,EAAImC,EAAJnC,KACRyC,QAAQC,IAAI,iBAAkB1C,GAC9BwB,EAAQR,EAAahB,EAAK2C,QAAU3C,GACpCyC,QAAQC,IAAI1C,GAAMqC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAElBP,GAAY,GACZW,QAAQI,MAAM,QAAOR,EAAAO,IAAS,QAEV,OAFUP,EAAAC,KAAA,GAE9BX,GAAa,GAAOU,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,yBAEvB,kBAbe,OAAAH,EAAAiB,MAAA,KAAA/B,UAAA,KAehB,MAAO,CAAEjB,KAAAA,EAAMF,UAAAA,EAAWC,QAAAA,EAASE,WAAAA,EACrC,C,oKCdO,SAASgD,EAAQC,GACtB,OAAOC,EAAAA,EAAAA,IAAU,UAADxC,OAAWuC,EAAO,YACpC,CAGO,SAASE,EAAWF,GACzB,OAAOC,EAAAA,EAAAA,IAAU,UAADxC,OAAWuC,EAAO,YACpC,CAGO,SAASG,EAAaC,GAC3B,OAAOH,EAAAA,EAAAA,IAAU,gBAAiB,CAAEpC,OAAQ,CAAEwC,MAAOD,IACvD,CAEO,SAASE,EAAgBN,GAC9B,OAAOC,EAAAA,EAAAA,IAAU,UAADxC,OAAWuC,GAC7B,CAGO,SAASrD,IACd,OAAOsD,EAAAA,EAAAA,IAAU,sBACnB,CA3BAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBM,QAAS,mC","sources":["components/home/Home.jsx","hook/useApi.jsx","services/endpointApi.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useApi from 'hook/useApi';\nimport { getHomepageMovies } from 'services/endpointApi';\n\nexport default function Home() {\n  const { isLoading, isError, data, getResults } = useApi(getHomepageMovies);\n\n  useEffect(() => {\n    getResults();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <ul>\n        {isError && <p>Something went wrong...</p>}\n        {isLoading && <p>Loading ...</p>}\n        {data.map((movie, index) => (\n          <li key={index}>\n            <Link to={`movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nconst useApi = (fetchFunction, params, useResults = true) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsErrror] = useState(false);\n\n  const getResults = async () => {\n    setIsLoading(true);\n    try {\n      const { data } = await fetchFunction(params);\n      console.log('Data from API:', data);\n      setData(useResults ? data.results : data);\n      console.log(data);\n    } catch (error) {\n      setIsErrror(true);\n      console.error('error', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return { data, isLoading, isError, getResults };\n};\n\nexport default useApi;\n","import axios from 'axios';\n\n// Default\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '6f0a7e90748cec36ca14cbe73d2c8153',\n};\n\n// Cast\nexport function getCast(movieId) {\n  return axios.get(`/movie/${movieId}/credits`);\n}\n\n// Reviews\nexport function getReviews(movieId) {\n  return axios.get(`/movie/${movieId}/reviews`);\n}\n\n// Movies\nexport function searchMovies(searchQuery) {\n  return axios.get(`/search/movie`, { params: { query: searchQuery } });\n}\n// Movie details\nexport function getMovieDetails(movieId) {\n  return axios.get(`/movie/${movieId}`);\n}\n\n// Home\nexport function getHomepageMovies() {\n  return axios.get('/trending/movie/day');\n}\n"],"names":["Home","_useApi","useApi","getHomepageMovies","isLoading","isError","data","getResults","useEffect","_jsxs","children","_jsx","map","movie","index","Link","to","concat","id","title","fetchFunction","params","useResults","arguments","length","undefined","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setIsLoading","_useState5","_useState6","setIsErrror","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchFunction","_data","_context","prev","next","sent","console","log","results","t0","error","finish","stop","apply","getCast","movieId","axios","getReviews","searchMovies","searchQuery","query","getMovieDetails","api_key"],"sourceRoot":""}