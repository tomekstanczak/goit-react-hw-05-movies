{"version":3,"file":"static/js/23.02c054f7.chunk.js","mappings":"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","sources":["components/reviews/Reviews.jsx","hook/useApi.jsx","services/endpointApi.jsx"],"sourcesContent":["import useApi from 'hook/useApi';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/endpointApi';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const { data, isLoading, isError, getResults } = useApi(getReviews, movieId);\n\n  useEffect(() => {\n    getResults();\n    // eslint-disable-next-line\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {isError && <p>Something went wrong...</p>}\n        {isLoading && <p>Loading ...</p>}\n        {data.length > 0 ? (\n          data.map(review => (\n            <li key={review.id}>\n              <p>{review.content}</p>\n              <p>{review.author}</p>\n            </li>\n          ))\n        ) : (\n          <p> We don't have any reviewes for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nconst useApi = (fetchFunction, params, useResults = true) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsErrror] = useState(false);\n\n  const getResults = async () => {\n    setIsLoading(true);\n    try {\n      const { data } = await fetchFunction(params);\n      console.log('Data from API:', data);\n      setData(useResults ? data.results : data);\n      console.log(data);\n    } catch (error) {\n      setIsErrror(true);\n      console.error('error', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return { data, isLoading, isError, getResults };\n};\n\nexport default useApi;\n","import axios from 'axios';\n\n// Default\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '6f0a7e90748cec36ca14cbe73d2c8153',\n};\n\n// Cast\nexport function getCast(movieId) {\n  return axios.get(`/movie/${movieId}/credits`);\n}\n\n// Reviews\nexport function getReviews(movieId) {\n  return axios.get(`/movie/${movieId}/reviews`);\n}\n\n// Movies\nexport function searchMovies(searchQuery) {\n  return axios.get(`/search/movie`, { params: { query: searchQuery } });\n}\n// Movie details\nexport function getMovieDetails(movieId) {\n  return axios.get(`/movie/${movieId}`);\n}\n\n// Home\nexport function getHomepageMovies() {\n  return axios.get('/trending/movie/day');\n}\n"],"names":["Reviews","movieId","useParams","_useApi","useApi","getReviews","data","isLoading","isError","getResults","useEffect","_jsx","children","_jsxs","length","map","review","content","author","id","fetchFunction","params","useResults","arguments","undefined","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setIsLoading","_useState5","_useState6","setIsErrror","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchFunction","_data","_context","prev","next","sent","console","log","results","t0","error","finish","stop","apply","getCast","axios","concat","searchMovies","searchQuery","query","getMovieDetails","getHomepageMovies","api_key"],"sourceRoot":""}